{
   "resources": [
      {
         "id": "1",
         "title": "General Tips",
         "link":"The following is a bunch of tips/advise for you to boost your knowledge and understanding of Android Application development. There are many more things as well, Android is a vast world so, better start today from level 0 because at each step in this world of Android you will find many new things and that is the important part you should come across new things and ways, learning each and every thing is not a good thought but learning a thing according to your need and when it is needed that is a good thing but first of all you should know what things are out there which you can try to build a better app. So, keep yourself chill and give time to always finding something new and keep it in your brain for using when needed.\nRead these tips and explore them online you will develop a sound knowledge of these and find many others in the process. 1) Always be updated with the new technology in Android from different Resources.\n\n2) You should have a good understanding of the following:\n• Activity LifeCycle \n• Service, IntentService and their lifecycle\n• Broadcast Receivers\n• Content Providers\n• Tasks and the Back Stack\n• Debugging your app\n• Context in Android\n• Android Views and Layouts\n• Android Themes and Styles\n• Fragments\n• ViewPager\n• RecyclerView\n• Shared Preferences\n• Sqlite\n• Bitmaps\n• Threading\n• ThreadPoolExecutor\n• Looper, Handler, HandlerThread\n• HTTP and REST\n• Networking in Android apps\n• Notifications\n• API's\n• Location and Maps\n• Android Sensors\n• Localization and Internationalization\n• Run Time Permissions\n• App Standby and Doze Mode\n• Android Support Libraries\n• Material Design\n• Android Build System\n\n3) Follow best practices in Android.\n\n4) Know about the Android Useful tools.\n\n5) Read others code as much as you can.\n\n6) Get to know the code quality check tools.\n\n7) Get familiar with plugins.8) Take the security of your app seriously.\n\n9) Architect your app properly.\n\n10) Be aware of latest API Changes.\n\n11) Don't ignore memory leaks.\n\n12) Reduce APK Size.\n\n13) Use Proguard in your release version.\n\n14) Avoid hardcoded text.\n\n15) Create separate layouts for UI elements that will be re-used.\n\n16) Place launcher icons in mipmap-folders.\n\n17) Use shapes and selectors instead of images as much as possible. This further reduces APK size.\n\n18) Avoid deep levels in layouts. A deep hierarchy of views makes your UI slow.\n\n19) Use a HTTP library like Fast Android Networking, Volley, or Retrofit, depending on your use case.\n\n20) Use the Parcelable class instead of Serializable when passing data in Intents or Bundles.\n\n21) Start using Github or Bitbucket to safely store your Android project and the incremental changes you make over time.\n\nThese are some helpful tips for you but the internet is full of useful material so, try to explore more and more."
      }, {
         "id": "2",
         "title": "Some usefull Libraries",
         "link":"You must be familiar with these libraries and others as well they are very important to build a professional app.\n\n1) Gson\n2) ButterKnife\n3) Picasso\n4) Dagger\n5) Glide\n6) Espresso\n7) support:v4,v7,v13\n8) Retrofit\n9) okhttp\n10) Timber\n11) joda.time\n12) Android Ion\n13) Crashlytics\n14) Firebase\n15) Mixpanel\n16) Leakcanary\n17) Otto\n18) Fabric\n19) javax\n20) Lottie Animation\n21) Dexter\n22) ReadableBottomBar\n23) ArthurHub"
      }, {
         "id": "3",
         "title": "Some Shortcut key on Android Studio",
         "link":"General:\nCopy:\nWindows: Ctrl+C\nmacOS: CMD+C\n\nPaste:\nWindows: Ctrl+V\nmacOS: CMD+V\n\nSave:\nWindows: Ctrl+S\nmacOS: CMD+S\n\nClipboard history:\nWindows: Ctrl+Shift+V\nmacOS: CMD+Shift+V\nAndroid Studio Keyboard Shortcuts\nNavigating and Searching:\nFind:\nWindows: Ctrl+F\nmacOS: CMD + F\n\nAll purpose (Meta)Shortcut/Find action:\nWindows: Ctrl+Shift+A\nmacOS: CMD+Shift+A\n\nGo to file:\nWindows: Ctrl+Shift+N\nmacOS: Command+Shift+O\n\nNavigate open tabs:\nWindows: Alt+Right/Left Arrow\nmacOS: Ctrl+Right/Left Arrow\n\nLookup recent files:\nWindows: Ctrl+E\nmacOS: CMD+E\n\nGo to line:\nWindows: Ctrl+G\nmacOS: CMD+L\n\nNavigate to last edit location:\nWindows: Ctrl+Shift+Backspace\nmacOS: CMD+Shift+Backspace\n\nGo to declaration:\nWindows: Ctrl+B or Ctrl+Click\nmacOS: CMD+B or CMD +Click\n\nGo to implementation:\nWindows: Ctrl+Alt+B\nmacOS: CMD+Alt+B\n\nGo to source:\nWindows: F4/Ctrl+Enter\nmacOS: F4/CMD+Down Arrow\n\nGo to super Class:\nWindows: Ctrl+U\nmacOS: CMD+U\n\nShow Call hierarchy:\nWindows: Ctrl+Alt+H\nmacOS: Ctrl+Option+HSearch in path/project:\nWindows: Ctrl+Shift+F\nmacOS: CMD+Shift+F\n\nClose Active Tab:\nWindows: Ctrl+F4\nmacOS: CMD+W"
      },{
         "id": "4",
         "title": "Some Helpful Resources",
         "link": "1) stackoverflow.com is your best friend in the programming life. Give time to your best friend, keep in touch and always ask help from it whatever your problem. Just paste your problem or the error in your logcat during the run. Your best friend will provide you the best solution.\n\n2) developer.android.com is the Google's platform for android developers to know anything they want. You can find information about any thing related to Android.\n\n3) github.com is the treasure of code and examples for a developer.\n\n4) medium.com is a very useful place to give time, as it will keep you updated with all the new technology buzz and new trends. Read as much articles as you can you will find very helpful material there.\n\n5) quora.com is another wonderful website where you can interact with students, beginners and professional developers from all around the world for problem solving and other discussions on the latest technology in any field."
      },
      {

         "id": "5",
         "title":"Some Useful plugin",
         "link": "1) Key promoter: Helps you to use a keyboard more often.\n\n2) String Manipulation: Provides actions for text manipulation (e.g. toggling styles like camelCase, hyphen-lowercase etc., capitalize text and many more).\n\n3) Android Material Design Icon Generator: Set Material Design icons to your Android project. After installation you can use a shortcut: cmd + shift + m to generate an icon (by default).\n\n4) ButterKnifeZelezny: One-click creation of Butterknife view injections.\n\n5) MVP generator: This plugin generates your MVP android code.\n\n6) Parcelable generator: Parcelable is android implementation of java Serializable. It’s used for passing data between android components with processing time faster than java Serializable.\n\n7) IntelliJ/Android Studio Plugin for Android Parcelable boilerplate code generation: Android Parcelable implementation based on fields in the class.\n\n8) Git Flow Integration: For introducing a Git Flow branching model.\n\n9) Builder plugin: Plugin from Square that generates a static nested Builder for a class.\n\n10) DTOnator: All android applications use JSON for communication. JSON is light-weight and preferred data exchange format on mobile devices. We create POJO from JSONs. This plugin embeds POJO creation in \nandroid IDE.\n\n11) Android Selectors Generate: Automatically generates drawable selectors from appropriately named Android resources.\n\n12) Material Theme UI EAP: Android studio has two theme available Default and Dracula. If you want to use material theme use this plugin.\n\n13) CodeGlance: Embeds a code minimap similar to the one found in Sublime into the editor pane. Works with both light and dark themes using your customized colors for syntax highlighting.\n\n14) Advanced Java Folding: Folding options increases readability of code by hiding less important code constructs.\n\n15) Android DPI Calculator: DPI calculator allows you to calculate different sizes in all available default densities on Android platform, i.e.: xxxhdpi, xxhdpi, xhdpi, hdpi, mdpi, ldpi and tvdpi.\n\n16) JVM Debugger Memory view: If you have memory concerns in your app or want to check object allocation at break points install this.\n\n17) JRebel for Android: Similar to Google’s Instant run feature in android studio. To save installation and build time, they only apply patches for new changes rather than reinstalling complete APK.\n\n18) Android Resource Usage Count: This plugin automatically counts resource usage and shows it in the left strip of each line in your android studio. Very handy if you want to get rid of resources not \nbeing used in your project anymore.\n\n19) BIU: Biu is a convienient plugin to compress your PNGs one by one or all selected ones. It’s powered by the well known pngquant library and API from tinypng.\n\n20) Folding Plugin: It displays your files as a group of different folders in project structure view.\n\n21) GitIgnore: It ignores all the build files, auto generated files, IDE cache etc. for you.\n\n22) AndroidLocalizationer: Translate your strings resources to other languages. Install it and then right click string resource file and select ‘Convert to other languages’ and choose which languages you want.\n\n23) Android Wifi ADB: Android wifi ADB helps you install, run and debug android APKs over wifi. Get rid of carrying USB cable.\n\n24) ADB Idea: Automates adb commands to: uninstall, kill, start, restart, clear an application and clear the application data and restart it.\n\n25) Genymotion plugin: Allows you to create and start Genymotion virtual devices from Android Studio.\n\n26) Android Methods Count: Plugin that parses your Android library dependencies and shows the methods count as an handy hint.\n\n27) Flutter: Plugin to build and deploy cross-platform, high-performance mobile apps on both Android and iOS."
      }
     
   ]
  
}